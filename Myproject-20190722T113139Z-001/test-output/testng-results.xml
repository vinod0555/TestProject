<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="28" started-at="2020-01-07T10:59:17Z" finished-at="2020-01-07T10:59:17Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="28" started-at="2020-01-07T10:59:17Z" finished-at="2020-01-07T10:59:17Z">
      <class name="com.hrm.scripts.CreateEmployee">
        <test-method status="PASS" signature="initReport()[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="initReport" is-config="true" duration-ms="333" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReport -->
        <test-method status="FAIL" signature="initGlobalVar()[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="initGlobalVar" is-config="true" duration-ms="0" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Long.parseLong(Unknown Source)
	at java.lang.Long.parseLong(Unknown Source)
	at com.hrm.base.BaseTest.initGlobalVar(BaseTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initGlobalVar -->
        <test-method status="SKIP" signature="initApplication(java.lang.String)[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="initApplication" is-config="true" duration-ms="0" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initApplication -->
        <test-method status="SKIP" signature="preCondition(java.lang.reflect.Method)[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="preCondition" is-config="true" duration-ms="0" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="SKIP" signature="testCreateEmployee()[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="testCreateEmployee" duration-ms="1" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEmployee -->
        <test-method status="SKIP" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="postCondition" is-config="true" duration-ms="0" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method status="SKIP" signature="closeApplication()[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="closeApplication" is-config="true" duration-ms="0" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method status="SKIP" signature="publishReport()[pri:0, instance:com.hrm.scripts.CreateEmployee@6aaa5eb0]" name="publishReport" is-config="true" duration-ms="0" started-at="2020-01-07T16:29:17Z" finished-at="2020-01-07T16:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- com.hrm.scripts.CreateEmployee -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
